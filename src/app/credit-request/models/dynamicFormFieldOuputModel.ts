/**
 * OMRO DigitalApp API
 * API used on OMRO Digital Resources
 *
 * OpenAPI spec version: v1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { DynamicFormFieldRestrictions } from './dynamicFormFieldRestrictions';
import { DynamicFormFieldType } from './dynamicFormFieldType';

/**
 * The definition of a dynamic form field
 */
export interface DynamicFormFieldOuputModel {
    /**
     * Unique Id for this field. If blank, the field should not be submitted (eg. Header)
     */
    fieldId?: string;
    /**
     * The label for the field
     */
    label?: string;
    /**
     * The type of the field
     */
    fieldType?: DynamicFormFieldType;
    /**
     * Value restrictions needed for client-side validation
     */
    restrictions?: DynamicFormFieldRestrictions;
    /**
     * Aplicable only to Textbox,  Alphanumeric, Email: minimum length,  Digits: mimimum value when converted to Numeric,  IBAN: ignore this value
     */
    minimum?: number;
    /**
     * Aplicable only to Textbox,  Alphanumeric, Email: maximul length,  Digits: maximum value when converted to Numeric,  IBAN: ignore this value
     */
    maximum?: number;
    /**
     * If true, the field must have a value,  For Dropdown, if the Key is blank, the user mus select a non blank option,  If false and if the user has not filled-in the field, the field must be ommited when posting the form,
     */
    required?: boolean;
    /**
     * True/False - for q-checkbox;  an alphanumeric value - for textbox;  the date (yyyy-MM-dd) - for Calendar;  the key - for dropdown or radio;  if blank, no default value
     */
    defaultValue?: string;
    /**
     * For textbox only, the placeholder text  For q-checkbox, the text displayed near the q-checkbox  For header, the text of the header
     */
    textValue?: string;
    /**
     * For Dropdown and Radio, a list of key/value pairs,  for Dropdown, if the key is blank, that value should be considered as \"not selected\" if the Required flag is true
     */
    possibleValues?: { [key: string]: string; };
    /**
     * Only for textbox  If not blank, this string should be used as an additional validation of the textbox value
     */
    regexValidationString?: string;
    /**
     * The message to be displayed if a field is required but no value was entered
     */
    errorMessageRequired?: string;
    /**
     * The message to be displayed if a value was entered but the validation failed
     */
    errorMessageValidation?: string;
    /**
     * If not blank, a tooltip icon shoud be displayed near the label
     */
    toolTip?: string;
    /**
     * The value to be displayed when the form is Read/Only
     */
    submittedValue?: string;

    /*
    *  Maximum length for a text field
    * */
    maxLength?: number;
}
